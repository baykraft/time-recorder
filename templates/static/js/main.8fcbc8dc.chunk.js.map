{"version":3,"sources":["stores/UserStore.js","routes/Main.js","PrivateRoute.js","routes/TimeSheet.js","serviceWorker.js","index.js","App.js","images/slack_icon.svg"],"names":["userStore","authenticated","accessToken","user","this","bool","emit","token","EventEmitter","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","slack","width","height","Main","classes","useState","setAuthenticated","useEffect","on","isAuthenticated","code","qs","parse","window","location","search","undefined","axios","get","params","client_id","process","client_secret","redirect_uri","then","response","data","userId","setUser","setAccessToken","to","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","onClick","src","alt","PrivateRoute","children","rest","render","pathname","state","from","userIcon","borderRadius","table","minWidth","container","marginTop","marginBottom","formContainer","margin","noteCell","button","holiday","dayOfWeek","TimeSheet","getUser","Date","getFullYear","year","setYear","getMonth","month","setMonth","rows","setRows","yearError","setYearError","monthError","setMonthError","createData","date","day","customer","kind","start","end","note","Container","maxWidth","TextField","required","error","length","label","defaultValue","helperText","onChange","event","target","value","size","startIcon","Number","getAccessToken","times","inputDate","getDate","getDay","targetTime","find","t","push","setDate","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","scope","TableBody","map","row","key","Boolean","hostname","match","ReactDOM","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.8fcbc8dc.chunk.js","sourcesContent":["import { EventEmitter } from 'events';\n\nclass UserStore extends EventEmitter {\n    constructor() {\n        super();\n        this.authenticated = false;\n        this.accessToken = '';\n        this.user = {};\n    }\n    isAuthenticated() {\n        return this.authenticated;\n    }\n    setAuthenticated(bool) {\n        this.authenticated = bool;\n        this.emit('change');\n    }\n    getAccessToken() {\n        return this.accessToken;\n    }\n    setAccessToken(token) {\n        this.accessToken = token;\n        this.emit('change');\n    }\n    getUser() {\n        return this.user;\n    }\n    setUser(user) {\n        this.user = user;\n        this.emit('change');\n    }\n}\n\nconst userStore = new UserStore();\n\nexport default userStore;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Redirect} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport slack from '../images/slack_icon.svg';\nimport userStore from '../stores/UserStore';\nimport qs from 'query-string';\nimport axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n        flexGrow: 1\n    },\n    slack: {\n        width: 32,\n        height: 32,\n        marginRight: theme.spacing(2)\n    }\n}));\n\nfunction Main() {\n    const classes = useStyles();\n    const [authenticated, setAuthenticated] = useState(false);\n\n    useEffect(() => {\n        userStore.on('change', () => {\n            setAuthenticated(userStore.isAuthenticated());\n        });\n        const code = qs.parse(window.location.search).code;\n        if (code !== undefined) {\n            axios.get('https://slack.com/api/oauth.access', {\n                params: {\n                    client_id: process.env.REACT_APP_OAUTH_CLIENT_ID,\n                    client_secret: process.env.REACT_APP_OAUTH_CLIENT_SECRET,\n                    code: code,\n                    redirect_uri: process.env.REACT_APP_OAUTH_REDIRECT\n                }\n            }).then((response) => {\n                if (response.data['ok']) {\n                    const accessToken = response.data['access_token'];\n                    const userId = response.data['user_id'];\n                    axios.get('https://slack.com/api/users.info', {\n                        params: {\n                            token: accessToken,\n                            user: userId\n                        }\n                    }).then((response) => {\n                        if (response.data['ok']) {\n                            userStore.setUser(response.data['user']);\n                            userStore.setAccessToken(accessToken);\n                            userStore.setAuthenticated(true);\n                        }\n                        else {\n                            // TODO\n                        }\n                    });\n                }\n                else {\n                    // TODO\n                }\n            });\n        }\n    }, []);\n\n    let login = () => {\n        const clientId = process.env.REACT_APP_OAUTH_CLIENT_ID;\n        const redirectUri = process.env.REACT_APP_OAUTH_REDIRECT;\n        window.location = `https://slack.com/oauth/authorize?client_id=${clientId}&scope=users:read&redirect_uri=${redirectUri}`;\n    };\n\n    return authenticated ? (<Redirect to='/timesheet'/>) : (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        株式会社ベイクラフト\n                    </Typography>\n                    <Button color=\"inherit\" onClick={login}>\n                        <img src={slack} className={classes.slack} alt=\"slack\" />\n                        Login with Slack\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default Main\n","import React, { useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport userStore from './stores/UserStore';\n\nexport default function PrivateRoute({ children, ...rest }) {\n    const [authenticated] = useState(userStore.isAuthenticated());\n    return (\n        <Route {...rest} render={({ location }) =>\n            authenticated ? (children) : (<Redirect to={{ pathname: \"/\", state: { from: location }}}/>)\n        }/>\n    );\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport userStore from '../stores/UserStore';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\nimport axios from 'axios';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n        flexGrow: 1\n    },\n    userIcon: {\n        borderRadius: 5,\n        marginRight: theme.spacing(2)\n    },\n    table: {\n        minWidth: 650\n    },\n    container: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    formContainer: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: 200,\n        },\n        marginTop: theme.spacing(2)\n    },\n    noteCell: {\n        width: 200\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    holiday: {\n        color: '#f44336'\n    }\n}));\n\nconst dayOfWeek = ['日', '月', '火', '水', '木', '金', '土'];\n\nexport default function TimeSheet() {\n    const classes = useStyles();\n    const [user] = useState(userStore.getUser());\n    const [year, setYear] = useState(new Date().getFullYear());\n    const [month, setMonth] = useState(new Date().getMonth() + 1);\n    const [rows, setRows] = useState([]);\n    const [yearError, setYearError] = useState('');\n    const [monthError, setMonthError] = useState('');\n\n    let createData = (date, day, holiday, customer, kind, start, end, note) => {\n        return { date, day, holiday, customer, kind, start, end, note };\n    };\n\n    let search = () => {\n        setYearError('');\n        setMonthError('');\n        // 年月の入力がない場合はエラー\n        if (year.length === 0 || month.length === 0) {\n            setYearError(year.length === 0 ? '必須入力' : '');\n            setMonthError(month.length === 0 ? '必須入力' : '');\n            return;\n        }\n        // 年が2020年未満、または現在年を超える場合はエラー\n        if (Number(year) < 2020 || Number(year) > new Date().getFullYear()) {\n            setYearError('2020≦入力年≦現在年');\n            return;\n        }\n\n        axios.get(process.env.REACT_APP_REST_URI + `/${year}/${month}/times`, {\n            params: {\n                token: userStore.getAccessToken()\n            }\n        }).then((response) => {\n            let times = response.data;\n            let inputDate = new Date(year, month - 1, 1);\n            let rows = [];\n            while (true) {\n                let date = inputDate.getDate();\n                let day = inputDate.getDay();\n                let holiday = (day === 0 || day === 6) ? 'H' : '';\n                let targetTime = times.find(t => t['date'] === date);\n                if (targetTime) {\n                    rows.push(createData(\n                        date,\n                        dayOfWeek[day],\n                        holiday,\n                        '',\n                        '',\n                        targetTime['start'],\n                        targetTime['end'],\n                        targetTime['note']));\n                }\n                else {\n                    rows.push(createData(date, dayOfWeek[day], holiday, '', '', '', ''));\n                }\n                inputDate.setDate(date + 1);\n                if (Number(month) !== (inputDate.getMonth() + 1)) {\n                    break;\n                }\n            }\n            setRows(rows);\n        });\n    };\n\n    let handleChangeYear = (event) => {\n        setYear(event.target.value);\n    };\n\n    let handleChangeMonth = (event) => {\n        setMonth(event.target.value);\n    };\n\n    return (\n        <form className={classes.root}>\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        株式会社ベイクラフト\n                    </Typography>\n                    <Button color=\"inherit\">\n                        <img src={user['profile']['image_32']} className={classes.userIcon} alt=\"icon\" />\n                        {user['profile']['real_name']}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Container maxWidth=\"md\" className={classes.formContainer}>\n                <TextField required error={yearError.length !== 0} label=\"年\" defaultValue={year}\n                           helperText={yearError}\n                           onChange={handleChangeYear} />\n                <TextField required error={monthError.length !== 0} label=\"月\" defaultValue={month}\n                           helperText={monthError}\n                           onChange={handleChangeMonth} />\n                <Button variant=\"contained\" color=\"primary\" size=\"large\" className={classes.button}\n                        startIcon={<SearchIcon />} onClick={search}>\n                    検索\n                </Button>\n            </Container>\n            <Container maxWidth=\"md\" className={classes.container}>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"timesheet\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\" component=\"th\" scope=\"row\">日付</TableCell>\n                                <TableCell align=\"center\">曜日</TableCell>\n                                <TableCell align=\"center\">休日</TableCell>\n                                <TableCell align=\"center\">客先</TableCell>\n                                <TableCell align=\"center\">勤休</TableCell>\n                                <TableCell align=\"center\">始業</TableCell>\n                                <TableCell align=\"center\">終業</TableCell>\n                                <TableCell className={classes.noteCell}>備考</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map(row => (\n                                <TableRow key={row.date}>\n                                    <TableCell align=\"center\">{row.date}</TableCell>\n                                    <TableCell align=\"center\">{row.day}</TableCell>\n                                    <TableCell align=\"center\" className={classes.holiday}>{row.holiday}</TableCell>\n                                    <TableCell align=\"center\">{row.customer}</TableCell>\n                                    <TableCell align=\"center\">{row.kind}</TableCell>\n                                    <TableCell align=\"center\">{row.start}</TableCell>\n                                    <TableCell align=\"center\">{row.end}</TableCell>\n                                    <TableCell>{row.note}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n        </form>\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Main from './routes/Main';\nimport PrivateRoute from './PrivateRoute';\nimport TimeSheet from './routes/TimeSheet';\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\"><Main/></Route>\n                <PrivateRoute path='/timesheet'>\n                    <TimeSheet/>\n                </PrivateRoute>\n            </Switch>\n        </BrowserRouter>\n    );\n}\n","module.exports = __webpack_public_path__ + \"static/media/slack_icon.be396144.svg\";"],"sourceRoot":""}